{
	"info": {
		"_postman_id": "acfd8d20-a5e7-4c55-8a3f-06e324f7e6fc",
		"name": "New data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"const schema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"age\": { \"type\": \"integer\"},\r",
							"        \"name\": { \"type\": \"string\"},\r",
							"        \"salary\" : {\"type\":\"array\",\r",
							"         \"items\": [\r",
							"            {\"type\":\"integer\"},\r",
							"         {\"type\":\"string\"},\r",
							"         {\"type\":\"string\"}]\r",
							"    } \r",
							"        }\r",
							"     };\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"pm.test(\"Check salary\", function () { \r",
							"pm.expect(parseInt(pm.response.json().salary[1])).to.eql(request.data.salary*2)\r",
							"pm.expect(parseInt(pm.response.json().salary[2])).to.eql(request.data.salary*3)\r",
							"pm.expect(parseInt(pm.response.json().salary[2])).to.be.above(pm.response.json().salary[0])\r",
							"pm.expect(parseInt(pm.response.json().salary[2])).to.be.above(parseInt(pm.response.json().salary[1]))\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}\n\n",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		}
	]
}