{
	"info": {
		"_postman_id": "0fe7692f-240b-4be9-898e-dacd66b6666c",
		"name": "Collection_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Name test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql('Alina');\r",
							"});\r",
							"pm.test(\"Age test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql('35');\r",
							"});\r",
							"pm.test(\"Salary test\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(2000);\r",
							"});\r",
							"pm.test(\"Name test from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(request.data.name);\r",
							"});\r",
							"pm.test(\"Age test from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(request.data.age);\r",
							"});\r",
							"pm.test(\"Salary test from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(parseInt(request.data.salary));\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.family)\r",
							"\r",
							"pm.test(\"u_salary_1_5_year\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.family.u_salary_1_5_year).to.eql(parseInt(request.data.salary*4));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "age",
							"value": "35",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const paramsString = request.url.split('?')[1];\r",
							"const eachParamArray = paramsString.split('&');\r",
							"let params = {};\r",
							"eachParamArray.forEach((param) => {\r",
							"    const key = param.split('=')[0];\r",
							"    const value = param.split('=')[1];\r",
							"    Object.assign(params, {[key]: value});\r",
							"});\r",
							"console.log(params);\r",
							"\r",
							"pm.test(\"Name test from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.request.url.query.toObject().name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age test from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(pm.request.url.query.toObject().age);\r",
							"});\r",
							"pm.test(\"Salary test from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary).to.eql(parseInt(pm.request.url.query.toObject().salary));\r",
							"});\r",
							"\r",
							"pm.test(\"Dog has name property\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"\r",
							"pm.test(\"Dog has age property\", function() {\r",
							"    var jsonData = pm.response.json();\r",
							"  pm.expect(jsonData.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"pm.test(\"Dog's name is Lucky\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Dog's age is 4\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Alina&age=35&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Name in response =  from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(pm.request.url.query.toObject().name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age in response = from request\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.age).to.eql(parseInt(pm.request.url.query.toObject().age));\r",
							"});\r",
							"\r",
							"const paramsString = request.url.split('?')[1];\r",
							"const eachParamArray = paramsString.split('&');\r",
							"let params = {};\r",
							"eachParamArray.forEach((param) => {\r",
							"    const key = param.split('=')[0];\r",
							"    const value = param.split('=')[1];\r",
							"    Object.assign(params, {[key]: value});\r",
							"});\r",
							"\r",
							"console.log(params);\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alina&age=35&salary=4200",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "4200"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "First",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		}
	]
}